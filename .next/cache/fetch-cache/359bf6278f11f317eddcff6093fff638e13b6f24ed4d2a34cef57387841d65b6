{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"856345434ed1f5ed-NRT","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Fri, 16 Feb 2024 05:08:03 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=AUN%2Bjv8L8Hhnth3c%2B1x2lv5wLcfkn7%2F%2BhYx3C3bpu9ycrr7Az8yuUvKj46zERPIzdgDd%2B601RF5LuoaSc3bd6QzkRj%2BFAJyyS7PkPSGVwUghll1E%2FWaw3gYyDuH2jmpcf8LDO2zEHmiRf9MBoLg%2FHiOg%2B1Uv8X4%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}